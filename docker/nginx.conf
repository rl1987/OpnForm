map $original_uri $api_uri {
    ~^/api(/.*$) $1;
    default $original_uri;
}

server {
         listen       80;
         server_name  opnform.keyspace.dev;
         root         /app/public;

         access_log /dev/stdout;
         error_log  /dev/stderr error;

         index index.html index.htm index.php;

         location / {
           proxy_http_version 1.1;
           proxy_pass http://ui:3000;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-Host $host;
           proxy_set_header X-Forwarded-Port $server_port;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "Upgrade";
         }

         location ~/(api|open|local\/temp|forms\/assets)/ {
              set $original_uri $uri;
              try_files $uri $uri/ /index.php$is_args$args;
         }

         location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass api:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            #fastcgi_param SCRIPT_FILENAME /usr/share/nginx/html/$fastcgi_script_name;
            fastcgi_param SCRIPT_FILENAME /usr/share/nginx/html/public/index.php;
            fastcgi_param REQUEST_URI $api_uri;
         }

         location /.well-known/acme-challenge/ {
            root /var/www/certbot;  # This is the location for challenge files
        }

        location / {
            return 301 https://$host$request_uri;
        }
}

server {
    listen 443 ssl;
    server_name opnform.keyspace.dev;  # Replace with your domain

    ssl_certificate /etc/letsencrypt/live/opnform.keyspace.dev/fullchain.pem;  # Replace with your domain
    ssl_certificate_key /etc/letsencrypt/live/opnform.keyspace.dev/privkey.pem;  # Replace with your domain

    location / {
        proxy_pass http://api:your_api_port;  # Adjust the port as necessary
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
